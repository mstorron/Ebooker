Critical
--------

* TESTS
** Integration test for the actual command-line client: test flags, etc.
** Mocks for server-calling code, DB?
* REFACTORING
** check godoc output, see if module visibility is alright.
** clean documentation comments, debugging output.
* PROFILING
** needless call-by-value causing copying? Where are we slow?

* FEATURE QUALITY
* Length of tweets is bad, often goes over.
* Ensure no direct subsets?


Features
--------
----
* Actually run as a damn service.
** Consider goroutines to handle calls.

* Persistent storage of Generators.
* Write a frontend "client" that serves like the current script does.
* Another frontend is the webapp.
* Handle asyncronous fetches from Twitter, generation, e.g.

----
* "Sweeps," a set of filters that you can apply to the text, 
** Capitalization.
*** ALLCAPS
*** all lowercase, better known as the "instagram user"
*** Washington Post Style, Where Every Word is Capitalized
*** Force a proper sentence structure.

** Hashtags
*** coffee dadder#
*** Random #Hashtagging of a word.
*** Chuck Grassleying #CombineWordsIntoOneTag (note that you'd probably want to 
     remove a word from whatever you contract together to make it as 
     weird-as-hell as possible).

